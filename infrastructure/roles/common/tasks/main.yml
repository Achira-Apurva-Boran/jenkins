---
- name: Create VPC for Jenkins
  ec2_vpc_net:
    state: present
    region: "{{ aws_region }}"
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_cidr }}"
    dns_hostnames: yes
    dns_support: yes
    multi_ok: no
    tenancy: default
    profile: "{{ aws_profile }}"
    tags:
      Name: "jenkins"
  register: jenkins_vpc

- name: Create Internet Gateway
  ec2_vpc_igw:
    state: present
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ jenkins_vpc.vpc.id }}"
    tags:
      Name: "jenkins"
  register: jenkins_igw

- name: Create subnets
  ec2_vpc_subnet:
    state: present
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    az: "{{ item.value.az }}"
    vpc_id: "{{ jenkins_vpc.vpc.id }}"
    cidr: "{{ item.value.cidr }}"
    tags:
      Name: "jenkins_{{ item.value.az }}"
  with_dict: "{{ vpc_subnets }}"
  register: jenkins_vpc_subnets

- name: Grab the route tables
  ec2_vpc_route_table_info:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    filters:
      vpc-id: "{{ jenkins_vpc.vpc.id }}"
  register: jenkins_route_table

- name: Update the route table in the vpc
  ec2_vpc_route_table:
    state: present
    lookup: id
    route_table_id: "{{ jenkins_route_table.route_tables[0].id }}"
    vpc_id: "{{ jenkins_vpc.vpc.id}}"
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    tags:
      Name: "jenkins_route_table_{{ jenkins_vpc.vpc.id }}"
    subnets:
        - "{{ jenkins_vpc_subnets.results[0].subnet.id }}"
        - "{{ jenkins_vpc_subnets.results[1].subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ jenkins_igw.gateway_id }}"
  register: jenkins_route_table_updated

- name: Create vpc security groups
  ec2_group:
    state: present
    profile: "{{ aws_profile}}"
    region: "{{ aws_region }}"
    vpc_id: "{{ jenkins_vpc.vpc.id }}"
    name: "jenkins_sg_{{ jenkins_vpc.vpc.id }}"
    description: "jenkins security group for {{ jenkins_vpc.vpc.id }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
  register: jenkins_sg

- name: Launch EC2 instance
  ec2:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    instance_type: "{{ ec2_instance_type }}"
    image: "{{ ec2_image }}"
    wait: yes
    group: "{{ jenkins_sg.group_name }}"
    vpc_subnet_id: "{{ jenkins_vpc_subnets.results[0].subnet.id }}"
    key_name: "{{ keypair }}"
    instance_tags:
      app: "jenkins"
    count_tag:
      app: "jenkins"
    exact_count: 1
  register: jenkins_ec2_instance

- name: Restart the stopped EC2 instance
  ec2_instance: 
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    filters:
      vpc-id: "{{ jenkins_vpc.vpc.id }}"
    wait: yes
    state: running
  when: jenkins_ec2_instance.tagged_instances[0].state == "stopped"

- name: Gather EC2 info
  ec2_instance_info:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    filters:
      vpc-id : "{{ jenkins_vpc.vpc.id }}"
  register: ec2_info

- name: Assign Elastic IP to EC2 instance
  ec2_eip:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    device_id: "{{ ec2_info.instances[0].instance_id }}"
    ip: "{{ elastic_ip }}"

- name: Route53 Create or Update subdomain value
  route53:
    state: present
    profile: "{{ aws_profile }}"
    zone: "{{ r53_zone }}"
    record: "{{ r53_record }}"
    type: A
    ttl: 10
    wait: yes
    value:
      - "{{ elastic_ip }}"
    overwrite: yes

- name: Gather EC2 info
  ec2_instance_info:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    filters:
      vpc-id : "{{ jenkins_vpc.vpc.id }}"
  register: ec2_info

- name: Wait for SSH to come up
  wait_for:
    host: "{{ item.public_dns_name }}"
    port: 22
    delay: 10
    timeout: 320
    state: started
  with_items: "{{ ec2_info.instances }}"

